/*
    Tengo Language
    $ tengo ValidConditions.tengo <asciidoc_file_to_validate>
*/

fmt := import("fmt")
os := import("os")
text := import("text")

input := os.args()
//vale gets the file as scope when it runs
scope := os.read_file(input[2])
matches := []

if_regex := "^(ifdef::.+\\[\\]|ifndef::.+\\[\\]|ifeval::.*)"
endif_regex := "^endif::.*"

for line in text.split(scope, "\n") {
  if text.re_match(if_regex, line) {
    start := text.index(scope, line)
    matches = append(matches, {begin: start, end: start + len(line)})
  } else if text.re_match(endif_regex, line) {
    if len(matches) > 0 {
      //remove the most recently added open ifdef match
      matches = matches[:len(matches)-1]
    } else if len(matches) == 0 {
      //add orphan endif::[] statements
      start := text.index(scope, line)
      matches = append(matches, {begin: start, end: start + len(line)})
    }
  }
}

if len(matches) == 0 {
  fmt.println("if statements are balanced")
} else {
  fmt.println(matches) 
}
